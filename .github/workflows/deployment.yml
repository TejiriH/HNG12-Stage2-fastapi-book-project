name: CD Pipeline

on:
  push:
    branches:
      - main  # Run this workflow when code is merged into main

jobs:
  deploy:  # Job name must be exactly "deploy"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version


      - name: Set up SSH Key
        run: |
          echo "${{ secrets.PRIVATE_KEY_PEM }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Authenticate with AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URI }}

      - name: Build and Push Docker Image
        run: |
          docker build -t fastapi-app .
          docker tag fastapi-app:latest ${{ secrets.AWS_ECR_URI }}:latest
          docker push ${{ secrets.AWS_ECR_URI }}:latest

      - name: Deploy to EC2
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          sudo docker stop fastapi-container || true
          sudo docker rm fastapi-container || true
          sudo docker rmi ${{ secrets.AWS_ECR_URI }}:latest || true  # Remove old image
          sudo docker pull ${{ secrets.AWS_ECR_URI }}:latest  # Pull new image
          sudo docker run -d --name fastapi-container -p 127.0.0.1:8000:8000 ${{ secrets.AWS_ECR_URI }}:latest
          EOF

